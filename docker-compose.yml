version: "3"

services:

  ### external modules
  ####################################

  elasticsearch5:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    expose:
      - "9200"
      - "9300"
    environment:
      - cluster.name
      - xpack.security.enabled

  fuseki:
    image: eu.gcr.io/fdk-infra/fdk-fuseki-service:latest
    volumes:
      - fuseki-data:/etc/fuseki/databases/
    expose:
      - "8080"

  postgres:
    image: postgres:11.2
    volumes:
      - postgres-data:/var/lib/postgresql/data
    expose:
      - "5432"

  mongodb:
    image: mongo:latest
    environment:
      - MONGO_INITDB_ROOT_USERNAME
      - MONGO_INITDB_ROOT_PASSWORD
    expose:
      - "27017"

  sso:
    image: eu.gcr.io/fdk-infra/sso:latest
    expose:
      - "8084"
    environment:
      - KEYCLOAK_USER
      - KEYCLOAK_PASSWORD
      - IDPORTEN_CLIENT_ID
      - IDPORTEN_CLIENT_SECRET
      # if SSO_HOST and IDPORTEN_OIDC are on the same host, then deploy mock setup is deployed
      - IDPORTEN_OIDC_ROOT
      - SSO_HOST
      - REGISTRATION_HOST
      - CONCEPT_CATALOGUE_HOST
      - FDK_ADMIN_GUI_HOST
      #optional
      - EMAIL_VERIFY
      - SMTP_FROM
      - SMTP_FROM_NAME
      - SMTP_HOST
      - SMTP_USER
      - SMTP_PASSWORD

  ### ingress modules
  ##################################

  fdk-nginx-search:
    image: eu.gcr.io/fdk-infra/fdk-nginx-search:latest
    expose:
      - "8080"
    depends_on:
      - fdk-portal
      - fdk-dataset-api
      - fdk-dataset-harvester
      - fdk-api-harvester
      - concept-cat
      - fdk-informationmodel-harvester
      - api-catalogue

  fdk-nginx-registration:
    image: eu.gcr.io/fdk-infra/fdk-nginx-registration:latest
    expose:
      - "8080"
    depends_on:
      - dataset-catalogue-gui
      - dataset-catalogue
      - api-catalogue
      - reference-data
      - fdk-dataset-api
      - fdk-api-harvester
      - concept-cat

  ### external service proxies
  ##################################

#docker-compose does not allow removing services this is actually prod configuration
#  fdk-nginx-altinn-proxy:
#    image: eu.gcr.io/fdk-infra/fdk-nginx-altinn-proxy:latest
#    expose:
#      - "8080"
#    environment:
#      - ALTINN_HOST
#      - ALTINN_API_KEY
#      - ALTINN_SSL_BR_CRT_PEM
#      - ALTINN_SSL_BR_KEY_PEM

#docker-compose does not allow removing services this is actually prod configuration
#  fdk-nginx-enhetsregisteret-proxy:
#    image: eu.gcr.io/fdk-infra/fdk-nginx-enhetsregisteret-proxy
#    expose:
#      - "8080"

  ### nodejs services
  ####################################

  fdk-portal:
    image: eu.gcr.io/fdk-infra/fdk-portal:latest
    expose:
      - "8080"
    environment:
      - NODE_ENV
      - DISQUS_SHORTNAME

  dataset-catalogue-gui:
    image: eu.gcr.io/fdk-infra/dataset-catalogue-gui:latest
    expose:
      - "4300"
    environment:
      - NODE_ENV
      - REGISTRATION_LANGUAGE
      - SEARCH_HOST
      - SSO_HOST

  ### java services
  #############################

  fdk-api-harvester:
    image: eu.gcr.io/fdk-infra/fdk-api-harvester:latest
    expose:
      - "8080"
    depends_on:
      - elasticsearch5
      - reference-data
      - fdk-dataset-api

  concept-cat:
    image: eu.gcr.io/fdk-infra/concept-cat:env_prod_latest
    expose:
      - "8080"
    depends_on:
      - rabbitmq
      - fdk-harvest-admin

  fdk-informationmodel-harvester:
    image: eu.gcr.io/fdk-infra/fdk-informationmodel-harvester:latest
    expose:
      - "8080"

  fdk-dataset-harvester-gui:
    image: eu.gcr.io/fdk-infra/fdk-dataset-harvester-gui:latest
    expose:
      - "8080"
    depends_on:
      - fuseki
      - fdk-dataset-harvester

  fdk-harvest-admin:
    image: eu.gcr.io/fdk-infra/fdk-harvest-admin:env_prod_latest
    expose:
      - "8080"
    depends_on:
      - rabbitmq
      - mongodb
      - sso

  fdk-dataset-harvester:
    image: eu.gcr.io/fdk-infra/fdk-dataset-harvester:latest
    expose:
      - "8080"
    depends_on:
      - fuseki
      - elasticsearch5
      - reference-data
      - rabbitmq
    environment:
      - JAVA_OPTS
      - application.crawlerThreadPoolSize
      - harvestRecordRetentionDays
      - LOG_FORMAT
      - SPRING_PROFILES_ACTIVE

  dataset-catalogue:
    image: eu.gcr.io/fdk-infra/dataset-catalogue:latest
    ports:
      - "8080"
    depends_on:
      - elasticsearch5
      - reference-data
      - fdk-api-harvester

  api-catalogue:
    image: eu.gcr.io/fdk-infra/api-catalogue:latest
    ports:
      - "8080"
    depends_on:
      - elasticsearch5
      - reference-data
      - fdk-api-harvester

  reference-data:
    image: eu.gcr.io/fdk-infra/reference-data:latest
    expose:
      - "8080"
    depends_on:
      - postgres

  fdk-dataset-api:
    image: eu.gcr.io/fdk-infra/fdk-dataset-api:latest
    expose:
      - "8080"
    depends_on:
      - elasticsearch5

  user-api:
    image: eu.gcr.io/fdk-infra/user-api:latest
    expose:
      - "8080"
    depends_on:
      # in prod, it would be ngninx-altinn-proxy
      - fdk-nginx-altinn-proxy-mock
    environment:
      - ALTINN_PROXY_HOST
      - ORGNR_WHITELIST
      - ORGFORM_WHITELIST

  rabbitmq:
    image: rabbitmq:3.8.2-management
    expose:
      - "4672"
      - "15672"
    environment:
      - RABBITMQ_DEFAULT_USER
      - RABBITMQ_DEFAULT_PASS

  ### test and mock modules
  ###########################

  fdk-nginx-altinn-proxy-mock:
    image: eu.gcr.io/fdk-infra/fdk-nginx-altinn-proxy-mock:staging_latest
    expose:
      - "8080"

  fdk-nginx-enhetsregisteret-proxy-mock:
    image: eu.gcr.io/fdk-infra/fdk-nginx-enhetsregisteret-proxy-mock:staging_latest
    expose:
      - "8080"

volumes:
  fuseki-data:
  elasticsearch-data:
