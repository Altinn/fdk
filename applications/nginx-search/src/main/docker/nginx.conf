events {
  worker_connections  1024;
}

http {

    map $http_accept $mytarget {
        default http://search:8080;
        "~*text/html"   http://search:8080;
        "~*application/json" http://search-api:8080;
    }

    server {

        listen 8080;
        server_name default_server;

        proxy_connect_timeout       600;
        proxy_send_timeout          600;
        proxy_read_timeout          600;
        send_timeout                600;

        client_max_body_size 50M;


        # Compression

         # Enable Gzip compressed.
         gzip on;

        # Enable compression both for HTTP/1.0 and HTTP/1.1.
        gzip_http_version  1.1;

        # Compression level (1-9).
        # 5 is a perfect compromise between size and cpu usage, offering about
        # 75% reduction for most ascii files (almost identical to level 9).
        gzip_comp_level    5;

        # Don't compress anything that's already small and unlikely to shrink much
        # if at all (the default is 20 bytes, which is bad as that usually leads to
        # larger files after gzipping).
        gzip_min_length    256;

        # Compress data even for clients that are connecting to us via proxies,
        # identified by the "Via" header (required for CloudFront).
        gzip_proxied       any;

        # Tell proxies to cache both the gzipped and regular version of a resource
        # whenever the client's Accept-Encoding capabilities header varies;
        # Avoids the issue where a non-gzip capable client (which is extremely rare
        # today) would display gibberish if their proxy gave them the gzipped version.
        gzip_vary          on;

        # Compress all output labeled with one of the following MIME-types.
        gzip_types
          application/atom+xml
          application/javascript
          #application/json
          application/x-font-ttf
          application/x-web-app-manifest+json
          application/xhtml+xml
          application/xml
          font/opentype
          image/svg+xml
          image/x-icon
          text/css
          text/plain
          text/x-component;


        location /sockjs-node {
            proxy_pass http://search:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }

        location / {
            proxy_pass $mytarget$request_uri;
        }

        location /reference-data {
             rewrite .+?(reference-data\/?)(.*) /$2 break;

             proxy_pass http://reference-data:8080;
        }

        location /api {
             rewrite .+?(api\/?)(.*) /$2 break;

             proxy_pass http://search-api:8080;
        }

        # old spring boot thymeleaf
        location /old {
             rewrite .+?(old\/?)(.*) /$2 break;

             proxy_pass http://search-old:8080;
        }

        location /index.html {
            proxy_pass http://search:8080;
        }

        location ~* \.(js|png|jpg|ttf|svg|eot|woff|woff2|css)$ {
            proxy_pass http://search:8080;
        }

        location /detail.html {
            proxy_pass http://search-old:8080;
        }

    }
}