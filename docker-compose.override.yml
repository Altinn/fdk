version: "3"

services:
### external modules
  elasticsearch5:
    restart: always
    volumes:
      - ./data/esdata5:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - cluster.name=elasticsearch
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

  fuseki:
    restart: always
    volumes:
      - ./data/fuseki:/etc/fuseki/databases/
    ports:
      - "3030:8080"

  postgres:
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password

  keycloak:
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: Pa55w0rd
      # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
      #JDBC_PARAMS: "ssl=true"
    ports:
      - "8084:8080"

### ingress modules
  nginx-search:
    restart: always
    ports:
      - "8080:8080"

  nginx-registration:
    restart: always

  nginx-registration-ssl:
    image: dcatno/nginx-registration-ssl:latest
    restart: always
    ports:
      - "8098:443"
    depends_on:
      - nginx-registration
      - registration-react

### nodejs modules

  search:
    build: ./applications/search
    restart: always
    command: npm start
    ports:
      - "3000:3000"
    volumes:
      - ./applications/search/src:/usr/src/app/src
    environment:
      - REDUX_LOG=${REDUX_LOG}
      - NODE_ENV=${NODE_ENV}
      - DISQUS_SHORTNAME=felles-datakatalog-test-34807898934

  registration-react:
    build: ./applications/registration-react
    restart: always
    command: npm start
    ports:
      - "4300:4300"
    volumes:
      - ./applications/registration-react/src:/usr/src/app/src
    environment:
      - REGISTRATION_LANGUAGE=${REGISTRATION_LANGUAGE}
      - NODE_ENV=${NODE_ENV}
      - SEARCH_HOSTNAME=${SEARCH_HOSTNAME}

### java modules
  api-cat:
    restart: always
    ports:
      - "8102:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
      - FDK_ES_CLUSTERNODES=elasticsearch5:9300
      - FDK_ES_CLUSTERNAME=elasticsearch
      - LOG_LEVEL=${LOG_LEVEL}
      - LOG_FORMAT=compact

  concept-cat:
    restart: always
    ports:
      - "8104:8080"
    environment:
      - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
      - LOG_LEVEL=${LOG_LEVEL}

  informationmodel-cat:
    restart: always
    ports:
      - "8108:8080"
    environment:
    - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx512M -Dspring.profiles.active=docker
    - LOG_LEVEL=${LOG_LEVEL}

  harvester:
    restart: always
    ports:
      - "8082:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
      - fuseki.dcatServiceUri=http://fuseki:8080/fuseki/dcat
      - fuseki.adminServiceUri=http://fuseki:8080/fuseki/admin
      - application.harvesterUrl=http://harvester-api:8080
      - harvester_adminUsername=test_admin
      - harvester_adminPassword=password

  harvester-api:
    restart: always
    ports:
      - "8106:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx1024M -Dspring.profiles.active=docker
      - FDK_ES_CLUSTERNODES=elasticsearch5:9300
      - FDK_ES_CLUSTERNAME=elasticsearch
      - fuseki.dcatServiceUri=http://fuseki:8080/fuseki/dcat
      - fuseki.adminServiceUri=http://fuseki:8080/fuseki/admin
      - application.crawlerThreadPoolSize=2
      - harvestRecordRetentionDays=30

  reference-data:
    restart: always
    ports:
      - "8112:8080"
    environment:
      - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker

  registration-api:
    restart: always
    ports:
      - "8114:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
      - FDK_ES_CLUSTERNODES=elasticsearch5:9300
      - FDK_ES_CLUSTERNAME=elasticsearch
      - registrationAPI_clusterName=elasticsearch
      - registrationApi_altinnServiceUrl=http://registration-auth:8080/
      - registrationApi_apikey=${registrationApi_apikey}
      - registrationApi_clientSSLCertificateKeystoreLocation=conf/dummy-client-SSL-cert.p12
      - registrationApi_clientSSLCertificateKeystorePassword=password
      - registrationApi_harvesterUsername=test_admin
      - registrationApi_harvesterPassword=password
      - registrationApi_ipKeyPassword=${registrationApi_ipKeyPassword}
      - registrationApi_ipStorePassword=${registrationApi_ipStorePassword}
      - LOG_LEVEL=${LOG_LEVEL}

  search-api:
    restart: always
    ports:
      - "8118:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker
      - FDK_ES_CLUSTERNODES=elasticsearch5:9300
      - FDK_ES_CLUSTERNAME=elasticsearch


### test and mock modules
  registration-auth:
    restart: always
    ports:
      - "8116:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=docker

  e2e:
    build: ./applications/e2e
    volumes:
      - ./applications/e2e/test:/usr/src/app/test
      - ./applications/e2e/reports:/usr/src/app/reports
