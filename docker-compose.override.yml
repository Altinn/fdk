version: "2"

services:
  search:
    restart: always
    ports:
      - 8080:8080
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M
     - application.queryService=http://search-api:8080
     - application.queryServiceExternal=http://localhost:8083
     - application.fusekiService=http://fuseki:8080/fuseki

  search-api:
    restart: always
    ports:
      - 8083:8080
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M
     - application.elasticsearchHost=elasticsearch
     - application.elasticsearchPort=9300

  gdoc:
    ports:
      - 8084:8080
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M

  registration-validator:
    restart: always
    ports:
      - 8086:8080
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M

  fuseki:
    restart: always
    volumes:
      - ./data/fuseki:/etc/fuseki/databases/
    ports:
     - 3030:8080

  harvester-api:
    restart: always
    ports:
     - 8081:8080
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M
     - fuseki.dcatServiceUri=http://fuseki:8080/fuseki/dcat
     - fuseki.adminServiceUri=http://fuseki:8080/fuseki/admin
     - application.crawlerThreadPoolSize=2
     - application.elasticSearchHost=elasticsearch
     - application.elasticSearchPort=9300
     - application.elasticSearchCluster=elasticsearch
    volumes:
     - ./logs:/usr/local/tomcat/logs:rw

  harvester:
    restart: always
    ports:
     - 8082:8080
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M
     - fuseki.dcatServiceUri=http://fuseki:8080/fuseki/dcat
     - fuseki.adminServiceUri=http://fuseki:8080/fuseki/admin
     - application.harvesterUrl=http://harvester-api:8080
     - application.kibanaLinkFirstHalf="/app/kibana/#/dashboard/dashboard_template?_g=(refreshInterval:(display:Off,pause:!f,value:0),time:(from:now-24h,mode:quick,to:now))&_a=(filters:!(),options:(darkTheme:!f),panels:!((col:4,id:Crawler-Operations,panelIndex:1,row:3,size_x:9,size_y:3,type:visualization),(col:1,id:Crawler-Results,panelIndex:2,row:3,size_x:3,size_y:3,type:visualization),(col:1,id:Crawler-Metadata,panelIndex:4,row:1,size_x:12,size_y:2,type:visualization),(col:7,id:Validation-RuleId,panelIndex:6,row:6,size_x:6,size_y:4,type:visualization),(col:1,columns:!(ruleSeverity,event,cause,ruleId),id:validation_ruleId,panelIndex:7,row:6,size_x:6,size_y:4,sort:!(timestamp,desc),type:search)),query:(query_string:(analyze_wildcard:!t,query:'%22"
     - application.kibanaLinkSecondHalf="%22')),title:dashboard_template,uiState:())"
    volumes:
     - ./logs:/usr/local/tomcat/logs:rw


 # elasticsearch5:
 #   image: "docker.elastic.co/elasticsearch/elasticsearch:5.2.0"
 #   environment:
 #     - xpack.security.enabled=false
 #     - cluster.name=elasticsearch
 #   ports:
 #     - "920:9200"
 #     - "9300:9300"
 #   networks:
 #     platform:
 #       aliases:
 #         - es
 #     logging:
 #       aliases:
 #         - log_es

  elasticsearch:
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./data/esdata:/usr/share/elasticsearch/data

  dev-management:
    restart: always
    ports:
      - 8085:8080
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M
     - application.elasticsearchHost=elasticsearch
     - application.elasticsearchPort=9300
     - application.elasticsearchCluster=elasticsearch
     - application.fusekiHost=http://fuseki:8080
     - application.harvesterHost=http://harvester-api:8080

  nginx:
    restart: always
    ports:
      - 8099:8099

  registration-api:
    restart: always
    ports:
      - 8079:8080
    environment:
     - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M -Dspring.active.profiles=docker
     - reg_altinnServiceUrl=http://registration-auth:8080
     - reg_apikey=${reg_apikey}
     - reg_clientSSLCertificateKeystoreLocation=conf/dummy-client-SSL-cert.p12
     - reg_clientSSLCertificateKeystorePassword=password
     - reg_sslKeyPassword=${reg_sslKeyPassword}
     - reg_ipKeyPassword=${reg_ipKeyPassword}
     - reg_ipStorePassword=${reg_ipStorePassword}
     - reg_sslKeystorePassword


  registration:
    restart: always
    command: npm run serve
    ports:
      - 4200:4200
    volumes:
      -   ./applications/registration:/usr/src/app/:rw
    environment:
     - REG_API_URL=https://localhost:8099
     - QUERY_SERVICE_URL=/reference-data
     - VALIDATOR_URL=http://localhost:8086

  registration-auth:
      restart: always
      ports:
        - 8077:8080
      environment:
        - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx512M

  reference-data:
    ports:
      - 8100:8080
    environment:
     - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx512M -Dspring.active.profiles=docker


#  logstash:
#    image: "dcatno/logstash:${TAG}"
#    entrypoint: /opt/logstash/bin/logstash -f /etc/logstash/conf.d/logstash.conf
#    volumes:
#      - ./logs:/usr/local/tomcat/logs:rw
#    depends_on:
#      - elasticsearch
#    networks:
#      logging:

#  kibana:
#    ports:
#      - 5601:5601
#    environment:
#      - ELASTICSEARCH_URL=http://elasticsearch:9200
#    #volumes:
#    #      - ./data/kibana/config/:/opt/kibana/config/
#    depends_on:
#      - elasticsearch
#    networks:
#      logging:

