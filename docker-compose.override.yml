version: "3"

services:

  ### Shared services - databases + sso
  ####################################

  elasticsearch5:
    volumes:
      - /usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - cluster.name=elasticsearch
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - ES_JAVA_OPTS=-Xms512m -Xmx512m

  fuseki:
    volumes:
      - /etc/fuseki/databases/
    ports:
      - "3030:8080"

  postgres:
    restart: always
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=password
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"

  mongodb:
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - 27017:27017

  # OIDC requires host names to be available both in service and for browsers for redirects.
  # The simplest way to achieve this is to register the service names as hostnames also in the host machine hosts file:
  # mac: /private/etc/hosts
  # windows c:\Windows\System32\Drivers\etc\hosts

  # add one line:
  # 127.0.0.1       sso

  sso:
    volumes:
      #use this for theme development
      #- ../fdk/applications/sso/themes/fdk:/opt/jboss/keycloak/themes/fdk
      #- ../fdk/applications/sso/themes/fdk-choose-provider:/opt/jboss/keycloak/themes/fdk-choose-provider
      #this allows to run command "npm run keycloak-export"
      - ../sso/export:/tmp/keycloak/export
      #with link, et is enough to restart container to perform, instead of rebuild
      - ../sso/import:/tmp/keycloak/import
      - ../sso/import-template:/tmp/keycloak/import-template
      - ../sso/tools:/opt/fdk/tools
    # cp libraries/keycloak-user-storage-rest/target/keycloak-user-storage-rest.jar applications-external/sso/deployments/
    #      - ./applications/sso/deployments:/opt/jboss/keycloak/standalone/deployments
    environment:
      - DB_VENDOR=POSTGRES
      - DB_ADDR=postgres
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_SCHEMA=public
      - DB_PASSWORD=password
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
    #      - KEYCLOAK_LOGLEVEL=DEBUG
      - SSO_HOST=http://localhost:8084
      - REGISTRATION_HOST=http://localhost:8098
      - DEV_REGISTRATION_HOST=http://localhost:4301
      - CONCEPT_CATALOGUE_HOST=http://localhost:8202
      - DEV_CONCEPT_CATALOGUE_HOST=http://localhost:8203
      - FDK_ADMIN_GUI_HOST=http://localhost:8136
      - DEV_FDK_ADMIN_GUI_HOST=http://localhost:8137
      - RECORDS_OF_PROCESSING_ACTIVITIES_GUI_HOST=http://localhost:8140
      - DEV_RECORDS_OF_PROCESSING_ACTIVITIES_GUI_HOST=http://localhost:8141
    # This is local mock for ID-Porten, use this in dev, ut1 and st1. in it1 use idporten test, and in prod use idporten prod
      - IDPORTEN_OIDC_ROOT=http://localhost:8084/auth/realms/idporten-mock
      - IDPORTEN_CLIENT_ID=oidc_brreg_fellesdatakatalog
      - IDPORTEN_CLIENT_SECRET=29a2cfe1-1a61-4a04-bf84-64d70a340d04
    depends_on:
      - postgres
    ports:
      - "8084:8084"

  ### ingress modules
  ##################################

  fdk-nginx-search:
    ports:
      - "8080:8080"

  fdk-nginx-registration:
    ports:
      - "8098:8080"

  ### external service proxies
  ##################################

  # disabled in dev because we use mock
  # fdk-nginx-altinn-proxy:
  #   ports:
  #     - "8126:8080"

  # disabled in dev because we use mock
  #fdk-nginx-enhetsregisteret-proxy:
  #  ports:
  #    - "8130:8080"

  ### nodejs services
  ####################################

  fdk-portal:
    ports:
      - "3000:8080"
    volumes:
      - ./applications/search/src:/usr/src/app/src
    environment:
      - REDUX_LOG

  dataset-catalogue-gui:
    ports:
      - "4300:8080"
    volumes:
      - ../dataset-catalogue-gui/src:/usr/src/app/src
    environment:
      - REDUX_LOG
      - CONCEPT_REGISTRATION_API_HOST=http://localhost:8200
      - CONCEPT_REGISTRATION_HOST=http://localhost:8202
      - SEARCH_HOST=http://localhost:8080
      - SSO_HOST=http://localhost:8084

  dataset-catalogue:
    ports:
      - "8114:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=develop
      - registrationApi_harvesterUsername=test_admin
      - registrationApi_harvesterPassword=password
      - LOG_LEVEL=DEBUG
      - LOG_FORMAT=compact
      - FDK_ENHETSREGISTERET_PROXY_URL=http://fdk-nginx-enhetsregisteret-proxy-mock:8080/enhetsregisteret/api/enheter/
      - ORGANIZATION_CATALOGUE_URL=http://organization-catalogue:8080/

  api-catalogue:
    ports:
      - "8116:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=develop
      - registrationApi_harvesterUsername=test_admin
      - registrationApi_harvesterPassword=password
      - LOG_LEVEL=DEBUG
      - LOG_FORMAT=compact

  ### java services
  #############################

  fdk-api-harvester:
    ports:
      - "8102:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=develop
      - LOG_LEVEL=DEBUG
      - LOG_FORMAT=compact

  concept-cat:
    ports:
      - "8104:8080"
    environment:
      - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=develop
      - LOG_LEVEL=DEBUG
      - RABBIT_USERNAME=admin
      - RABBIT_PASSWORD=admin
      - HARVEST_ADMIN_ROOT_URL=http://localhost:8135/api

  fdk-informationmodel-harvester:
    ports:
      - "8108:8080"
    environment:
      - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx512M -Dspring.profiles.active=develop
      - LOG_LEVEL=DEBUG
      - SPRING_PROFILES_ACTIVE=develop

  fdk-harvest-admin:
    ports:
      - "8135:8080"
    environment:
      - KEYCLOAK_AUTH_URL=http://localhost:8084/auth
      - RABBIT_USERNAME=admin
      - RABBIT_PASSWORD=admin
      - MONGO_USERNAME=admin
      - MONGO_PASSWORD=admin

  fdk-dataset-harvester:
    ports:
      - "8106:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx1024M -Dspring.profiles.active=develop
      - application.crawlerThreadPoolSize=2
      - harvestRecordRetentionDays=30
      - LOG_FORMAT=compact
      - SPRING_PROFILES_ACTIVE=develop

  reference-data:
    ports:
      - "8112:8080"
    environment:
      - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=develop
      - FDK_SQL_JDBC_CONNECTION=jdbc:postgresql://postgres:5432/postgres?currentSchema=fdkreference
      - FDK_SQL_USERNAME=postgres
      - FDK_SQL_PASSWORD=password

  fdk-dataset-api:
    ports:
      - "8118:8080"
    environment:
      - JAVA_OPTS= -ea -Djava.security.egd=file:/dev/./urandom -Xmx256M -Dspring.profiles.active=develop
    depends_on:
      - rabbitmq

  user-api:
    ports:
      - "8124:8080"
    environment:
      - ALTINN_PROXY_HOST=http://fdk-nginx-altinn-proxy-mock:8080
      - ORGNR_WHITELIST=920210023,910258028
      - ORGFORM_WHITELIST=ADOS,FKF,FYLK,IKS,KF,KIRK,KOMM,ORGL,SF,STAT,SÃ†R
      - ADMIN_LIST=23076102252
    depends_on:
      - fdk-nginx-altinn-proxy-mock

  rabbitmq:
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
      - 5672:5672
      - 15672:15672

  ### test and mock modules
  ###########################

  fdk-nginx-altinn-proxy-mock:
    ports:
      - "8128:8080"

  fdk-nginx-enhetsregisteret-proxy-mock:
    ports:
      - "8132:8080"
