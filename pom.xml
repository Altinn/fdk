<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
    <modelVersion>4.0.0</modelVersion>

    <groupId>dcat.no</groupId>
    <artifactId>parent</artifactId>
    <version>0.1.0</version>
	<packaging>pom</packaging>
	
	<organization>
		<name>Brønnøysundregistrene</name>
		<url>http://brreg.no</url>
	</organization>

	<modules>
		<module>portal</module>
		<module>elasticsearch</module>
		<module>admin-webapp</module>
		<module>datastore</module>
		<module>harvester-app</module>
	</modules>

    <properties>
        <java.version>1.8</java.version>	
		<docker.image.prefix>fdk</docker.image.prefix>
		<docker.registry></docker.registry>		
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>
	
	<repositories>
		<repository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-releases</id>
			<url>https://repo.spring.io/libs-release</url>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<version>1.4.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<version>1.4.0.RELEASE</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>			
			<artifactId>spring-boot-starter-test</artifactId>
			<version>1.4.0.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
			<version>5.2.4.Final</version>
        </dependency>
        <dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.7</version>
		</dependency>
		<dependency>
			<groupId>org.elasticsearch</groupId>
			<artifactId>elasticsearch</artifactId>
			<version>2.1.1</version>
		</dependency>
	</dependencies>
	

    <build>
	<resources>
            <resource>
                <directory>${project.basedir}</directory>
                <filtering>true</filtering>
                <includes>
					<include>**/Dockerfile</include>
                    <include>**/*.properties</include>
                    <include>**/*.xml</include>
                </includes>
            </resource>
        </resources>
		
	<pluginManagement>
	    
	
        <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
            

		<plugin>
                <groupId>pl.project13.maven</groupId>
                <artifactId>git-commit-id-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>get-the-git-infos</id>
                        <goals>
                            <goal>revision</goal>
                        </goals>
                    </execution>                    
                </executions>

                <configuration>
                    <dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
                    <dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
                    <dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
                    <!-- false is default here, it prints some more information during the build -->
                    <verbose>true</verbose>                
                    <generateGitPropertiesFile>true</generateGitPropertiesFile>                   
                    <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename>
                    <format>properties</format>
                    <injectAllReactorProjects>true</injectAllReactorProjects>
					<failOnNoGitDirectory>true</failOnNoGitDirectory>
					<failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>

                    <skip>false</skip>
                   
                    <abbrevLength>7</abbrevLength>

                    <validationProperties>
                        <validationProperty>
                            <!--
                                 A descriptive name that will be used to be able to identify the validation that does not match up (will be displayed in the error message).
                            -->
                            <name>validating project version</name>
                            <!-- 
                                 the value that needs the validation
                                 *Note* : In order to be able to validate the generated git-properties inside the pom itself you may need to set the configutation `<injectAllReactorProjects>true</injectAllReactorProjects>`. 
                            -->
                            <value>${project.version}</value>
                            <!--
                                the expected value
                            -->
                            <shouldMatchTo><![CDATA[^.*(?<!-SNAPSHOT)$]]></shouldMatchTo>
                        </validationProperty>
                        <!-- the next validationProperty you would like to validate -->
                    </validationProperties>                 
                    <validationShouldFailIfNoMatch>true</validationShouldFailIfNoMatch>
                </configuration>

            </plugin>
		

   
		 <plugin>
            <groupId>com.spotify</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.4.9</version>
			<executions>
				<execution>
				<phase>package</phase>
				<goals>
					<goal>build</goal>
				</goals>
				</execution>
			</executions>
            <configuration>
                <imageName>${docker.registry}${docker.image.prefix}/${project.artifactId}:${git.commit.id.abbrev}</imageName>
                <dockerDirectory>${project.basedir}/src/main/docker</dockerDirectory>
				<pushImage>false</pushImage>
                <resources>
                    <resource>
                        <targetPath>/</targetPath>
                        <directory>${project.build.directory}</directory>
                        <include>${project.build.finalName}.jar</include>
				        <excludes>
                            <exclude>target/**/*</exclude>
                            <exclude>pom.xml</exclude>
                            <exclude>*.iml</exclude>
                        </excludes>
                    </resource>
                </resources>
            </configuration>
        </plugin>
		
    </plugins>
		</pluginManagement>
    </build>


</project>