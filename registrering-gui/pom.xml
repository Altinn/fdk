<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>no.dcat</groupId>
        <artifactId>fdk</artifactId>
        <version>0.2.4-SNAPSHOT</version>
    </parent>

    <groupId>no.dcat</groupId>
    <artifactId>registrering-gui</artifactId>

<profiles>

  		<profile>
  			<id>mac</id>
  			<activation>
  				<os>
  					<family>Mac</family>
  				</os>
  			</activation>
  			<properties>
  				<platform>macos</platform>
  			</properties>
        <build>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>prepare-dist-npm-runtime-dependency</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                  <configuration>
                    <executable>npm</executable>
                    <workingDirectory>target/</workingDirectory>
                    <arguments>
                      <arguments>run-script</arguments>
                      <arguments>build</arguments>
                    </arguments>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
  		</profile>
  		<profile>
  			<id>windows</id>
  			<activation>
  				<os>
  					<family>Windows</family>
  				</os>
  			</activation>
  			<properties>
  				<platform>windows</platform>
  			</properties>
        <build>
          <plugins>
            <plugin>
              <groupId>com.github.eirslett</groupId>
              <artifactId>frontend-maven-plugin</artifactId>
              <configuration>
                <installDirectory>c:\program files</installDirectory>
              </configuration>
              <executions>
                <execution>
                  <id>npm ng build</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>npm</goal>
                  </goals>
                  <configuration>
                    <arguments>run-script build</arguments>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
  		</profile>
  		<profile>
  			<id>linux</id>
  			<activation>
  				<os>
  					<family>Linux</family>
  				</os>
  			</activation>
  			<properties>
  				<platform>linux</platform>
  			</properties>
        <build>
          <plugins>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>exec-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>prepare-dist-npm-runtime-dependency</id>
                  <phase>prepare-package</phase>
                  <goals>
                    <goal>exec</goal>
                  </goals>
                  <configuration>
                    <executable>npm</executable>
                    <workingDirectory>target/</workingDirectory>
                    <arguments>
                      <arguments>run-script</arguments>
                      <arguments>build</arguments>
                    </arguments>
                  </configuration>
                </execution>
              </executions>
            </plugin>
          </plugins>
        </build>
  		</profile>


</profiles>
  <build>
    <!-- only filter dist -->
    <resources>
        <!-- copy docker file to target -->
        <resource>
          <directory>${project.basedir}</directory>
          <targetPath>${project.build.directory}/docker</targetPath>
          <filtering>false</filtering>
          <includes>
            <include>Dockerfile</include>
            <include>start.js</include>
            <include>dist/</include>
            <include>server/</include>
          </includes>
          <excludes>
            <exclude>e2e/</exclude>
            <exclude>node_modules/</exclude>
            <exclude>target/</exclude>
            <exclude>src/</exclude>
          </excludes>
        </resource>

    </resources>


    <plugins>

      <!--plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.8</source>
          <target>1.8</target>
          <excludes>
            <exclude>node_modules/</exclude>
          </excludes>
        </configuration>
      </plugin-->

        <!-- prevent maven from compiling -->
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <executions>
            <execution>
              <id>default-jar</id>
              <phase>none</phase>
              <configuration>
                <finalName>unwanted</finalName>
                <classifier>unwanted</classifier>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- prevent maven from installing -->
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <executions>
            <execution>
              <id>default-install</id>
              <phase>none</phase>
            </execution>
          </executions>
        </plugin>

      <!--plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <configuration>
          <attach>false</attach>
        </configuration>
      </plugin-->

      <!-- make sure docker-maven-plugin does not run from basedir -->

      <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>

        <configuration>
          <imageName>
            dcatno/registration:latest
          </imageName>
          <dockerDirectory>${project.build.directory}/docker</dockerDirectory>
          <serverId>docker-hub</serverId>
        </configuration>

      </plugin>
    </plugins>
  </build>



</project>
